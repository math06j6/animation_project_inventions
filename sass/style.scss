@use 'partials/vars';
@use 'partials/mixins';

* {
  box-sizing: border-box;
}

*::-webkit-scrollbar {
  width: 0;
}

*::-webkit-scrollbar-track {
  background: transparent;
}

*::-webkit-scrollbar-thumb {
  background: transparent;
  border: none;
}

body {
  display: grid;
  place-content: center;
  min-height: 100vh;
  color: vars.$base-color;
  background: vars.$bg-color;
  font: 100% vars.$font-stack;
  margin: 0;
  padding: 0;
  overflow-wrap: break-word;
  hyphens: auto;
  // scroll-behavior: smooth;

  .scroll-container {
    width: 100vw;
    height: 100%;
    display: flex;
    overflow-x: scroll;
    overflow-x: auto;
    overscroll-behavior-x: contain;
    scroll-snap-type: x mandatory;
    overflow-y: hidden;
    // scroll-behavior: smooth;
  }

  .scroll-container {
    width: 100vw;
    height: 100%;
    display: flex;
    overflow-x: scroll;
    overflow-x: auto;
    overscroll-behavior-x: contain;
    scroll-snap-type: x mandatory;
    overflow-y: hidden;
    scroll-behavior: smooth;
  }

  article {
    height: 100vh;
    flex: 0 0 100%;
    scroll-snap-align: center;
    scroll-snap-align: start;
    scroll-snap-stop: always;
  }

  article:nth-child(2n) {
    background: vars.$green-color;
  }

  article:nth-child(3n) {
    background: vars.$bg-color;
  }

  section {
    max-width: 1400px;
    margin: 0 auto;
    padding: 1rem;
  }

  h1 {
    // Mixin test
    font-size: 2.5rem;
    color: vars.$white-color;
    background: vars.$green-color;
    @include mixins.flexible();
    @include mixins.defaultBorder();
  }

  h2 {
    font: 100% vars.$roboto-slab-font-stack;
    font-size: 1.8rem;
    color: vars.$orange-color;
  }

  h3 {
    font-size: 1.5rem;
    font-weight: normal;
    text-decoration: underline vars.$orange-color;
  }

  a,
  p,
  li {
    font-weight: 400;
    font-size: 1rem;
    line-height: 1.6;
    padding: 0;
    margin: 0;
  }
}

.decade-circle {
  padding: 0;
  cursor: pointer;
  background: none;
  border: none;
  padding: 0.25rem;
  font-family: inherit;
  width: 5rem;
  height: 5rem;
  text-decoration: none;
  // Anvendes til (midlertidig animation)

  svg {
    width: 100%;
    height: 100%;
    max-width: 5rem;
  }

  circle.head {
    color: vars.$white-color;
    fill: vars.$green-color;
  }
  text.circle-text {
    fill: vars.$white-color;
    font-weight: 400;
    font-size: 1rem;
  }
}

.computer-btn {
  padding: 0;
  cursor: pointer;
  background: none;
  border: none;
  padding: 0.25rem;
  font-family: inherit;
  width: 5rem;
  height: 5rem;

  // Anvendes til (midlertidig animation)
  svg {
    width: 100%;
    height: 100%;
  }

  circle.head {
    color: vars.$white-color;
    fill: vars.$green-color;
  }
}

.computer-btn {
  --delay: calc(var(--i, 1) * 400ms);
  animation: fadeIn 1500ms var(--delay) forwards;
  opacity: 0;
}

.computer-btn:nth-child(2) {
  --i: 2;
}

.computer-btn:nth-child(3) {
  --i: 3;
}

.computer-btn:nth-child(4) {
  --i: 4;
}

.computer-btn:nth-child(5) {
  --i: 5;
}

.computer-btn:nth-child(6) {
  --i: 6;
}

@keyframes fadeIn {
  100% {
    opacity: 1;
  }
}

//*------------ Animation ------------*//

// This class is used with the IntersectionObserver
.is-visible .content > * {
  opacity: 1;
  transform: translate3d(0, 0, 0);
}

.content > * {
  opacity: 0;
  animation-delay: 800ms;
  transform: translate3d(0, 5rem, 0);
  transition: opacity 800ms, transform 800ms cubic-bezier(0.13, 0.07, 0.26, 0.99);
}

.is-visible .content > * {
  opacity: 1;
  transform: translate3d(0, 0, 0);
}

//*-----------------------------------*//
